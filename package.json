{
  "dependencies": {
    "bootstrap": "^5.3.0",
    "cloudinary": "^1.37.0",
    "multer": "^1.4.5-lts.1",
    "react-bootstrap": "^2.7.4",
    "react-google-charts": "^4.0.0",
    "streamifier": "^0.1.1"
  },
  "name": "amazona",
  "description": "1. installer les outils\r 2. Create react app\r 3. create Git repository\r 4. Liste des produits\r 5. Ajouter un page de route\r    1. npm i create-router-dom\r    2. create route for home screen\r    3. create route for product screen\r 6. Create Node.js server\r    1. run npm init in root folder\r    2. Update package.json set type: module\r    3. Add .js to imports\r    4. pm install express\r    5. create server.js\r    6. add start command as node backend/server.js\r    7. require express\r    8. create route for / return backend is ready.\r    9. move products.js from frontend to backend\r    10. create route for /api/products\r    11. return products\r    12. run npm start\r 7. Fetch Products From backend\r    1. set proxy in package.json\r    2. npm install axios\r    3. use state hook\r    4. use effect hook\r    5. use reducer hook\r 8. Manage State By Reducer Hook\r    1. definie reducer\r    2. upate fetch data\r    3. get state from usReducer\r 9. Add bootstrap UI Framework\r    1. npm install react-bootstrap bootstrap\r    2. update App.js\r 10. Create Product and Rating Component\r     1. create Rating component\r     2. Create Product component\r     3. Use Rating component in Product component\r 11. Create Product Details Screen\r     1. fetch product from backend\r     2. create 3 columns for image, info and action\r 12. Create Loading and Message Component\r     1. create loading component\r     2. use spinner component\r     3. craete message component\r     4. create utils.js to define getError fuction\r 13. Create React Context For Add Item To Cart\r     1. Create React Context\r     2. define reducer\r     3. create store provider\r     4. implement add to cart button click handler\r 14. Complete Add To Cart\r     1. check exist item in the cart\r     2. check count in stock in backend\r 15. Create Cart Screen\r     1. create 2 columns\r     2. display items list\r     3. create action column\r 16. Complete Cart Screen\r     1. click handler for inc/dec item\r     2. click handler for remove item\r     3. click handler for checkout\r 17. 1. create sign in form\r     2. add email and password\r     3. add signin button\r 18. Connect To MongoDB Database\r     1. create atlas monogodb database\r     2. install local mongodb database\r     3. npm install mongoose\r     4. connect to mongodb database\r 19. Seed Sample Products\r     1. create Product model\r     2. create seed route\r     3. use route in server.js\r     4. seed sample product\r 20. Seed Sample Users",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "build": "cd backend && npm install  && cd ../frontend && npm install && npm run build",
    "start": "node backend/server.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC"
}
